name: Release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
    # paths:
    #   - '.changeset/*.md'
    # tags-ignore:
    #   - '**'

permissions:
  actions: read
  checks: write
  contents: write
  deployments: none
  id-token: none
  issues: write
  discussions: none
  packages: none
  pages: none
  pull-requests: write
  repository-projects: none
  security-events: none
  statuses: write

jobs:
  release:
    if: github.repository == 'reemus-dev/contly'
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          # This makes Actions fetch all Git history so that Changesets can generate
          # changelogs with the correct commits
          fetch-depth: 0

      - id: install-pnpm
        uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8.5.1
          run_install: false

      # - id: pnpm-cache
      #   name: Get pnpm store directory
      #   shell: bash
      #   run: |
      #     echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      # - uses: actions/cache@v3
      #   name: Setup pnpm cache
      #   with:
      #     path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
      #     key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pnpm-store-

      - id: install-node
        name: Setup Node.js 18
        uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"
          node-version: 18

      # - id: auth-npm
      #   name: Create .npmrc to authenticate with npm
      #   run: |
      #     cat << EOF > "$HOME/.npmrc"
      #       //registry.npmjs.org/:_authToken=$NPM_TOKEN
      #     EOF
      #   env:
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - id: install
        name: Install dependencies
        run: pnpm install --frozen-lockfile

      - id: build
        name: Build packages
        run: pnpm pkgs:build

      - id: changesets
        name: Create Release Pull Request or Publish to npm
        uses: changesets/action@v1
        # with:
        #   publish: pnpm pkgs:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - id: merge
        name: Merge pull request
        uses: actions/github-script@v6
        if: steps.changesets.outputs.pullRequestNumber > 0
        with:
          script: |
            const owner = "reemus-dev";
            const repo = "contly";
            const head = "changeset-release/main";
            const pull_number = "${{ steps.changesets.outputs.pullRequestNumber }}"
            await github.rest.pulls.merge({ owner, repo, pull_number, merge_method: "squash"});

      - id: publish
        name: Publish to npm
        uses: changesets/action@v1
        if: steps.changesets.outputs.pullRequestNumber > 0
        with:
          publish: pnpm pkgs:publish --publish-branch changeset-release/main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - id: version
      #   name: Run changeset version to bump packages and commit changes
      #   run: pnpm pkgs:version
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - id: publish
      #   name: Publish updated packages
      #   run: pnpm pkgs:publish
        # env:
        #   NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - id: push
      #   name: Push git tags
      #   run: git push origin ${GITHUB_REF} --follow-tags
      #   # run: git push --follow-tags origin main
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create Release Pull Request or Publish to npm
      #   id: changesets
      #   uses: changesets/action@v1
      #   with:
      #     publish: pnpm pkgs:publish
      #   env:
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
